// <auto-generated />
using System;
using ASP.NET_Core_Web_API.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP.NET_Core_Web_API.Migrations
{
    [DbContext(typeof(WakacjeContext))]
    partial class WakacjeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP.NET_Core_Web_API.Entities.Atrakcja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("NazwaAtrakcji")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Odleglosc")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WyjazdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WyjazdId");

                    b.ToTable("Atrakcje");
                });

            modelBuilder.Entity("ASP.NET_Core_Web_API.Entities.Miejsce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kraj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WyjazdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WyjazdId")
                        .IsUnique();

                    b.ToTable("Miejsca");
                });

            modelBuilder.Entity("ASP.NET_Core_Web_API.Entities.Wyjazd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CzyFirma")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("NazwaWyjazdu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organizator")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wyjazdy");
                });

            modelBuilder.Entity("ASP.NET_Core_Web_API.Entities.Atrakcja", b =>
                {
                    b.HasOne("ASP.NET_Core_Web_API.Entities.Wyjazd", "Wyjazd")
                        .WithMany("Atrakcje")
                        .HasForeignKey("WyjazdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASP.NET_Core_Web_API.Entities.Miejsce", b =>
                {
                    b.HasOne("ASP.NET_Core_Web_API.Entities.Wyjazd", "Wyjazd")
                        .WithOne("Miejsce")
                        .HasForeignKey("ASP.NET_Core_Web_API.Entities.Miejsce", "WyjazdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
